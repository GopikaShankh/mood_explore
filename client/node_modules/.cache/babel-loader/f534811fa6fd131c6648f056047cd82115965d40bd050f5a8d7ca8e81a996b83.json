{"ast":null,"code":"var _jsxFileName = \"/home/navgurukul/Videos/Mood-App/src/components/MoodList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport '../App.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodList = () => {\n  _s();\n  const [moods, setMoods] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Fetch mood data from the backend\n    const fetchMoods = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/moods\"); // Replace with your backend URL\n        setMoods(response.data);\n      } catch (err) {\n        console.error(\"Error fetching moods:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMoods();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/submit-mood\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Your Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mood List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), moods.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Mood: \", mood.mood]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", mood.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(mood.date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Suggestions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: mood.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: suggestion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, mood._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No mood data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodList, \"1Fu5Uaiu8MZKB2geHdWInSrbV4Q=\");\n_c = MoodList;\nexport default MoodList;\nvar _c;\n$RefreshReg$(_c, \"MoodList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","MoodList","_s","moods","setMoods","loading","setLoading","fetchMoods","response","get","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","mood","message","Date","date","toLocaleString","suggestions","suggestion","index","_id","_c","$RefreshReg$"],"sources":["/home/navgurukul/Videos/Mood-App/src/components/MoodList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport '../App.css';\nimport { Link } from \"react-router-dom\";\nconst MoodList = () => {\n  const [moods, setMoods] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch mood data from the backend\n    const fetchMoods = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/moods\"); // Replace with your backend URL\n        setMoods(response.data);\n      } catch (err) {\n        console.error(\"Error fetching moods:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoods();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n\n  return (\n    <div>\n        <Link to=\"/submit-mood\">\n        <button>Add Your Mood</button>\n      </Link>\n      <h2>Mood List</h2>\n      {moods.length > 0 ? (\n        <ul>\n          {moods.map((mood) => (\n            <li key={mood._id}>\n              <h3>Mood: {mood.mood}</h3>\n              <p>Message: {mood.message}</p>\n              <p>Date: {new Date(mood.date).toLocaleString()}</p>\n              <h4>Suggestions:</h4>\n              <ul>\n                {mood.suggestions.map((suggestion, index) => (\n                  <li key={index}>{suggestion}</li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No mood data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default MoodList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,6BAA6B,CAAC,CAAC,CAAC;QACjEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC7C,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAOL,OAAA;IAAAc,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErC,oBACElB,OAAA;IAAAc,QAAA,gBACId,OAAA,CAACF,IAAI;MAACqB,EAAE,EAAC,cAAc;MAAAL,QAAA,eACvBd,OAAA;QAAAc,QAAA,EAAQ;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACPlB,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBf,KAAK,CAACiB,MAAM,GAAG,CAAC,gBACfpB,OAAA;MAAAc,QAAA,EACGX,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACdtB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,GAAI,QAAM,EAACQ,IAAI,CAACA,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BlB,OAAA;UAAAc,QAAA,GAAG,WAAS,EAACQ,IAAI,CAACC,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BlB,OAAA;UAAAc,QAAA,GAAG,QAAM,EAAC,IAAIU,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDlB,OAAA;UAAAc,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBlB,OAAA;UAAAc,QAAA,EACGQ,IAAI,CAACK,WAAW,CAACN,GAAG,CAAC,CAACO,UAAU,EAAEC,KAAK,kBACtC7B,OAAA;YAAAc,QAAA,EAAiBc;UAAU,GAAlBC,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CACjC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GATEI,IAAI,CAACQ,GAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELlB,OAAA;MAAAc,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjDID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}