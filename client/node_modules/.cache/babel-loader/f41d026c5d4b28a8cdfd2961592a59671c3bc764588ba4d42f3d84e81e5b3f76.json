{"ast":null,"code":"var _jsxFileName = \"/home/navgurukul/Videos/Mood-App/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MoodForm from \"./MoodForm\";\nimport MoodList from \"./MoodList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nim;\nconst Dashboard = () => {\n  _s();\n  const [moods, setMoods] = useState([]);\n\n  // Fetch moods from the backend\n\n  // Add a new mood\n  const addMood = async mood => {\n    try {\n      const response = await axios.post(\"http://localhost:5000\", mood);\n      setMoods([response.data, ...moods]);\n      //setMoods([...moods, response.data]);\n    } catch (error) {\n      console.error(\"Error adding mood:\", error);\n    }\n  };\n  const fetchMoods = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000\");\n      setMoods(response.data);\n    } catch (error) {\n      console.error(\"Error fetching moods:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMoods();\n  }, []);\n\n  // Delete a mood\n  const deleteMood = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/${id}`);\n      setMoods(moods.filter(mood => mood._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting mood:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoodForm, {\n      onAddMood: addMood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoodList, {\n      moods: moods,\n      onDeleteMood: deleteMood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"JVKzjhX8h3SP8t7rweTnWo8V/R0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","MoodForm","MoodList","jsxDEV","_jsxDEV","im","Dashboard","_s","moods","setMoods","addMood","mood","response","post","data","error","console","fetchMoods","get","deleteMood","id","delete","filter","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddMood","onDeleteMood","_c","$RefreshReg$"],"sources":["/home/navgurukul/Videos/Mood-App/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MoodForm from \"./MoodForm\";\nimport MoodList from \"./MoodList\";\nim\nconst Dashboard = () => {\n    const [moods, setMoods] = useState([]);\n\n    // Fetch moods from the backend\n\n\n    // Add a new mood\n    const addMood = async (mood) => {\n        try {\n            const response = await axios.post(\"http://localhost:5000\", mood);\n            setMoods([response.data, ...moods]);\n            //setMoods([...moods, response.data]);\n        } catch (error) {\n            console.error(\"Error adding mood:\", error);\n        }\n    };\n\n    const fetchMoods = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:5000\");\n            setMoods(response.data);\n        } catch (error) {\n            console.error(\"Error fetching moods:\", error);\n        }\n    };\n    useEffect(() => {\n        fetchMoods();\n    }, []);\n\n\n    // Delete a mood\n    const deleteMood = async (id) => {\n        try {\n            await axios.delete(`http://localhost:5000/${id}`);\n            setMoods(moods.filter((mood) => mood._id !== id));\n        } catch (error) {\n            console.error(\"Error deleting mood:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Dashboard</h1>\n            <MoodForm onAddMood={addMood} />\n            <MoodList moods={moods} onDeleteMood={deleteMood} />\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClCC,EAAE;AACF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;;EAGA;EACA,MAAMY,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,uBAAuB,EAAEF,IAAI,CAAC;MAChEF,QAAQ,CAAC,CAACG,QAAQ,CAACE,IAAI,EAAE,GAAGN,KAAK,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAML,QAAQ,GAAG,MAAMZ,KAAK,CAACkB,GAAG,CAAC,uBAAuB,CAAC;MACzDT,QAAQ,CAACG,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EACDhB,SAAS,CAAC,MAAM;IACZkB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,MAAME,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACA,MAAMpB,KAAK,CAACqB,MAAM,CAAC,yBAAyBD,EAAE,EAAE,CAAC;MACjDX,QAAQ,CAACD,KAAK,CAACc,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACY,GAAG,KAAKH,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA,CAACH,QAAQ;MAAC4B,SAAS,EAAEnB;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCxB,OAAA,CAACF,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACsB,YAAY,EAAEX;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd,CAAC;AAACrB,EAAA,CA/CID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}