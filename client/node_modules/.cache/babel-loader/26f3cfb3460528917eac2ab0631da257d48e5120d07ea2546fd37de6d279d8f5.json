{"ast":null,"code":"var _jsxFileName = \"/home/navgurukul/Pictures/mood-explore/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MoodForm from \"./MoodForm\";\nimport { Link } from \"react-router-dom\";\nimport './HomePage.css';\nimport Navbar from \"./navbar\";\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [moods, setMoods] = useState([]);\n\n  // Fetch moods from the backend\n  const fetchMoods = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return;\n    try {\n      const decodedToken = jwtDecode(token);\n      const userId = decodedToken.id;\n      const response = await axios.get(`http://localhost:8080/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMoods(response.data);\n    } catch (error) {\n      console.error(\"Error fetching moods:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMoods();\n  }, []);\n\n  // Add a new mood\n  const addMood = async mood => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      return;\n    }\n    const decodedToken = jwtDecode(token);\n    const userId = decodedToken.id;\n    try {\n      const response = await axios.post(\"http://localhost:8080\", {\n        user_id: userId,\n        mood\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMoods([...moods, response.data]);\n      console.log('Mood added:', response.data);\n    } catch (error) {\n      console.error(\"Error adding mood:\", error);\n    }\n  };\n\n  // Get the latest mood\n  const latestMood = moods.length > 0 ? moods[moods.length - 1] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MoodForm, {\n      onAddMood: addMood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Latest Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), latestMood ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Mood: \", latestMood.mood]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Message: \", latestMood.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", new Date(latestMood.date).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Suggestions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: latestMood.suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, latestMood._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No mood to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/history\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"View Mood History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"JVKzjhX8h3SP8t7rweTnWo8V/R0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","MoodForm","Link","Navbar","jwtDecode","jsxDEV","_jsxDEV","Dashboard","_s","moods","setMoods","fetchMoods","token","localStorage","getItem","decodedToken","userId","id","response","get","headers","Authorization","data","error","console","addMood","mood","post","user_id","log","latestMood","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddMood","message","Date","date","toLocaleString","suggestions","map","suggestion","index","_id","to","_c","$RefreshReg$"],"sources":["/home/navgurukul/Pictures/mood-explore/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MoodForm from \"./MoodForm\";\nimport { Link } from \"react-router-dom\";\nimport './HomePage.css';\nimport Navbar from \"./navbar\";\nimport { jwtDecode } from 'jwt-decode'; \nconst Dashboard = () => {\n    const [moods, setMoods] = useState([]);\n\n    // Fetch moods from the backend\n    const fetchMoods = async () => {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n\n\n        try {\n            const decodedToken = jwtDecode(token);\n            const userId = decodedToken.id;\n            const response = await axios.get(`http://localhost:8080/${userId}`, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            setMoods(response.data);\n        } catch (error) {\n            console.error(\"Error fetching moods:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchMoods();\n    }, []);\n\n    // Add a new mood\n    const addMood = async (mood) => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          return;\n        }\n\n        const decodedToken = jwtDecode(token); \n        const userId = decodedToken.id;\n\n        try {\n            const response = await axios.post(\"http://localhost:8080\", {user_id: userId,mood},{\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              });\n            setMoods([...moods, response.data]);\n            console.log('Mood added:', response.data);\n        } catch (error) {\n            console.error(\"Error adding mood:\", error);\n            \n        }\n    };\n\n\n    // Get the latest mood\n    const latestMood = moods.length > 0 ? moods[moods.length - 1] : null;\n\n    return (\n        <div className=\"bg\">\n            <Navbar />\n            <h1>Dashboard</h1>\n            <MoodForm onAddMood={addMood} />\n            <div>\n                <h2>Latest Mood</h2>\n                {latestMood ? (\n                    <ul>\n                        <li key={latestMood._id}>\n                            <h3>Mood: {latestMood.mood}</h3>\n                            <p>Message: {latestMood.message}</p>\n                            <p>Date: {new Date(latestMood.date).toLocaleString()}</p>\n                            <h4>Suggestions:</h4>\n                            <ul>\n                                {latestMood.suggestions.map((suggestion, index) => (\n                                    <li key={index}>{suggestion}</li>\n                                ))}\n                            </ul>\n                        </li>\n                    </ul>\n                ) : (\n                    <p>No mood to display</p>\n                )}\n            </div>\n            <Link to=\"/history\">\n                <button>View Mood History</button>\n            </Link>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}